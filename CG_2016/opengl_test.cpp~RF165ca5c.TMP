
#include <gl/glut.h>
#include <windows.h>
#include <array>
#include "MyBox.h"


float window_width = 100 * 800 / 600;
float window_height = 100;

std::list<MyBox*> *pList;

void RenderScene(void)
{
	glClear(GL_COLOR_BUFFER_BIT);

	{	//render codes here
		for (auto i : boxes)
			i->draw();
	}

	glutSwapBuffers();
}

void SetupRC(void)

{
	glClearColor(0.0f, 0.0f, 0.0f, 1.0f);


	new MyBox(-50, -50, 50, 1, 0, 0, 1, 1);
	new MyBox(-50, +50, 50, 0, 1, 0, 1, 1);
	new MyBox(+50, +50, 50, 0, 0, 1, 1, 1);
	new MyBox(+50, -50, 50, 1, 1, 1, 1, 1);
	pList = &MyBox::_boxes;

}

void ChangeSize(int w, int h)
{
	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();


	if (w <= h)
	{
		window_width = 100.f;
		window_height = 100.f * h / w;
	}
	else
	{
		window_width = 100.f * w / h;
		window_height = 100.f;
	}
	glOrtho(-window_width, window_width, -window_height, window_height, 1.f, -1.f);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

void TimerFunc(int value)
{


	glutPostRedisplay();
	glutTimerFunc(17, TimerFunc, 1);
}

void main(void)
{
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowPosition(200, 200);
	glutInitWindowSize(800, 600);
	glutCreateWindow("CG_2016");
	glutDisplayFunc(RenderScene);
	glutReshapeFunc(ChangeSize);
	glutTimerFunc(500, TimerFunc, 1);
	SetupRC();
	glutMainLoop();
}